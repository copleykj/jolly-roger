@import "../../node_modules/bootstrap/scss/functions";
@import "../../node_modules/bootstrap/scss/variables";

// Puzzle components helper styles
// Puzzle lists/tables
.puzzle-group {
  margin-bottom: 16px;
}

.puzzle-group-header {
  display: block;
  &:hover {
    cursor: pointer;
  }
  min-height: 32px;
}

.puzzle-list-wrapper {
  padding-left: 16px;
}

.puzzle {
  margin-bottom: 4px;
  vertical-align: top;

  &.unsolved {
    background-color: #f0f0f0;
  }

  &.solved {
    background-color: #dfffdf;
  }

  &.administrivia {
    background-color: #dfdfff;
  }
}

.puzzle-grid {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  align-items: center;
  justify-content: flex-start;
  padding-left: 4px;
  min-height: 32px;

  .puzzle-title {
    flex: 1 0 35%;
    display: inline-block;
    vertical-align: top;
    word-wrap: break-word;
    font-weight: bold;
  }

  .puzzle-link {
    flex: 1 1 1em;
    display: inline-block;
    vertical-align: top;
    text-align: center;
  }

  .puzzle-view-count {
    flex: 1 1 40px;
    display: inline-block;
    text-align: center;
  }

  .puzzle-answer {
    flex: 1 1 25%;
    display: inline-block;
    word-wrap: break-word;
    word-break: break-all;
    .answer-wrapper {
      margin: 0;
      padding: 0;
    }
  }

  .tag-list {
    flex: 1 10 25%;
    display: inline-block;
  }
}

@media (max-width: 499px) {
  .puzzle-title {
    flex-basis: 35%;
  }

  .puzzle-link {
    flex-basis: 15%;
  }

  .puzzle-view-count {
    flex-basis: 5%;
  }

  .puzzle-answer {
    flex-basis: 45%
  }

  .puzzle-grid .tag-list {
     /* Push tags to new row in narrow views */
    flex-basis: 100%;
    width: 100%;
  }
}

table.puzzle-list {
  width: 100%;
  max-width: 100%;
}

.puzzle-table-row {
  .puzzle-title {
    padding: 4px 0;
    font-weight: bold;
    word-wrap: break-word;
  }

  .puzzle-answer {
    word-break: normal;
  }
}

.answer-wrapper {
  display: inline-block;
  vertical-align: top;
  padding: 2px;
  margin: 2px;
}

@font-face {
  font-family: "Emoji";
  src: "Noto Color Emoji", "Apple Color Emoji", "Segoe UI Emoji";
  unicode-range: U+1F300-1FAFF, U+1F100-1F1FF, U+2300-23FF, U+2600-27BF;
}

.answer, #jr-puzzle-guess {
  text-transform: uppercase;
  font-family: "Emoji", monospace, "Noto Color Emoji", "Apple Color Emoji", "Segoe UI Emoji", sans-serif;
  font-weight: bold;
}

// Tags
.tag-list {
  display: inline;
}

.tag {
  display: inline-flex;
  align-items: center;
  line-height: 24px;
  margin: 2px 4px 2px 0;
  padding: 0 6px;
  border-radius: 4px;
  background-color: #ddd;
  color: #000;
  &.tag-administrivia {
    background-color: #ffff77;
  }
  &.tag-meta {
    background-color: #ffd57f;
  }
  &.tag-group {
    background-color: #7fffff;
  }
  &.tag-meta-for {
    background-color: #ffb0b0;
  }
  &.tag-needs {
    background-color: #ff4040;
  }
  &.tag-priority {
    background-color: #aaaaff;
  }
  &.tag-none {
    background-color: transparent;
    color: #808080;
  }
}

.tag-link, .tag-link:active, .tag-link:focus, .tag-link:hover {
  color: #000000;
  text-decoration: none;
}

.tag-popover {
  cursor: default;
  position: relative;

  /* Fill the space between the button and the popover, so the cursor can safely travel there */
  &.tag-popover-open:after {
    content: '';
    display: block;
    position: absolute;
    top: 100%;
    left: 0%;
    width: 100%;
    height: $popover-arrow-height;
    z-index: 2;
  }
}

.tag .btn.tag-remove-button {
  height: 18px;
  line-height: 16px;
  width: 18px;
  padding: 0;
  display: inline-block;
  vertical-align: middle;
  text-align: center;
  margin: 0 0 0 6px;
}

/*Guessing and History Modal */
.guess-history-table td.answer {
  word-break: break-all;
}

////////////
// Puzzle page styles
.puzzle-page {
  position: fixed;
  top: 50px;
  bottom: 0px;
  left: 0px;
  right: 0px;
  display: flex;
  flex-direction: column;

  > .SplitPanePlus {
    flex: 1 1 auto;
    position: relative;

    .puzzle-document, .chat-section {
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
    }
  }
}

// Chat
.chat-section {
  flex: 1 1 auto;
  display: flex;
  flex-flow: column;
  overflow: hidden;

  p, ul, blockquote, pre {
    margin-bottom: 0;
  }

  textarea {
    border-radius: 0;
  }

  blockquote {
    font-size: 14px;
    margin-left: 10px;
    border-left-color: #aaa;
  }
}

.chat-input-row {
  flex: none;
  display: flex;
  flex-direction: row;
  align-items: stretch;
  justify-content: space-between;
  border-top: $input-border-width solid $input-border-color;
  overflow: hidden;
  &:focus-within {
    border-color: $input-focus-border-color;
    box-shadow: $input-focus-box-shadow;
  }

  textarea {
    flex: 1 1 auto;
    border: none;
    &:focus {
        box-shadow: none;
    }
  }

  button {
    border-radius: 0;
  }
}

.chatter-section {
  flex: 0;
  background-color: #ebd0e3;
  font-size: 12px;
  line-height: 12px;
  border-bottom: 1px solid #000;

  .av-actions {
    display: flex;
    flex-direction: row;
    //margin-top: 6px;

    .btn {
      flex: 1;
      padding: 0 auto;
      display: flex;
      align-items: center;
      justify-content: center;
      border-radius: 0;
    }
  }
}

.chatter-subsection {
  position: relative;
  padding-top: 6px;

  header {
    position: absolute;
    top: 6px;
    left: 2px;
    z-index: 20;
  }

  .people-list {
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-end;
    min-height: 12px; // So that when there's no people it doesn't collapse entirely
  }

  .people-item {
    flex: 0 0 auto;
    width: 40px;
    height: 40px;
    background: white;

    display: flex;
    align-items: center;
    justify-content: center;
    text-transform: uppercase;
    font-weight: bold;
    font-size: 24px;
    color: black;
    line-height: 24px;
    margin-left: 4px;
    position: relative;

    .icon {
      font-size: 12px;
      width: 16px;
      text-align: center;
      color: $danger;
      height: 50%;
    }

    $mutedTop: -4px;
    $mutedRight: -2px;
    $deafenDiff: 2px;

    &.muted .muted-icon {
      position: absolute;
      top: $mutedTop;
      right: $mutedRight;
    }

    &.deafened {
      color: $secondary;
      background: #ffffff88;
      border: $deafenDiff solid white;

      .muted-icon {
        position: absolute;
        top: $mutedTop - $deafenDiff;
        right: $mutedRight - $deafenDiff;
      }

      .deafened-icon {
        position: absolute;
        bottom: 1px;
        right: $mutedRight - $deafenDiff;
      }
    }

    .initial {
      z-index: 10;
    }

    &.live .initial {
      // white border around initial
      // aids readability if the spectrum graph is high
      text-shadow: -1px 1px 0 white,
				  1px 1px 0 white,
				 1px -1px 0 white,
				-1px -1px 0 white;
    }

    .connection {
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 3px;
      background-color: #cccccc;

      &.checking {
        background-color: #bbdcff;
      }

      &.connected, &.completed {
        background-color: #3d98fa;
      }

      &.disconnected {
        background-color: red;
      }

      &.failed {
        background-color: maroon;
      }

      &.closed {
        background-color: black;
      }
    }

    &.deafened .connection {
      bottom: -$deafenDiff;
      left: -$deafenDiff;
      right: -$deafenDiff;
      width: auto;
    }

    .spectrogram {
      position: absolute;
      top: 0;
      right: 0;
      left: 0;
      bottom: 0;
    }
  }
}

.chatter-tooltip {
  // Force chatter tooltip overlay to get larger than the default
  // react-bootstrap stylesheet permits.  We can only apply classes to the root
  // tooltip <div>; the .tooltip-inner className is controlled by
  // react-bootstrap/popper.
  .tooltip-inner {
    max-width: 300px;
  }
}

.chat-history {
  flex: 1 1 auto;
  overflow-y: auto;
}

.chat-message, .chat-placeholder {
  padding: 0 4px;
  margin-bottom: 2px;
  word-wrap: break-word;
  font-size: 14px;
  &.system-message {
    background-color: #e0e0e0;
  }
}

.chat-timestamp {
  float: right;
  font-style: italic;
  font-size: 12px;
  color: #666666;
}

// Puzzle metadata
.puzzle-metadata {
  flex: none;
  padding: 2px 4px;
  border-bottom: 1px solid black;
}

.puzzle-metadata-row {
  display: flex;
  width: 100%;
  font-size: 14px;
  line-height: 28px;
  align-items: flex-start;
  align-content: flex-start;
  justify-content: space-between;
}

.puzzle-metadata-title-set {
  flex: 0 0 auto;

  .puzzle-metadata-title {
    font-weight: bold;
  }
}

.puzzle-metadata .view-count {
  cursor: pointer;
  white-space: nowrap;
}

.puzzle-metadata-answers {
  flex: 1 1 auto;
  display: flex;
  justify-content: flex-end;
  align-items: center;
  flex-wrap: wrap;

  .answer {
    line-height: 24px;
    height: 28px;
    margin-left: 2px;
    padding: 0 6px;
    border-radius: 4px;
    background-color: #00ff00;
    color: #000000;
    display: flex;

    .answer-remove-button {
      color: default;
      margin: 0 -6px 0 2px;
      padding: 0 8px 0 0;
      height: 28px;
    }
  }
}

.puzzle-metadata .tag-list {
  display: flex;
  flex-grow: 1;
  justify-content: flex-start;
  align-items: flex-start;
  align-content: flex-start;
  flex-wrap: wrap;
  margin-left: 4px;
}

.puzzle-metadata-row .btn {
  line-height: 22px;
  padding: 0 6px;
  margin: 2px 0;
  border-width: 1px;
  display: inline-block;
}

.puzzle-metadata-action-row {
  flex-wrap: wrap;
}

.puzzle-metadata .puzzle-metadata-external-link-button, .puzzle-metadata .gdrive-button {
  display: inline-block;
  font-weight: bold;
  white-space: nowrap;
  /* On very narrow windows, desperately try to prevent line wrap */
  @media (max-width: 374px) {
    .linkLabel {
      display: none;
    }
  }
}

@media (any-pointer: fine) {
  .puzzle-metadata .tablet-only {
    display: none;
  }
}

.puzzle-document {
  > .puzzle-document-message {
    display: block;
    width: 100%;
    height: 100%;
    background-color: #ddddff;
  }
}

.puzzle-document > .gdrive-embed {
  /* Workaround for unusual sizing behavior of iframes in iOS Safari */
  /* Width and height need to be specified in px then adjusted by min and max */
  width: 0px;
  height: 0px;
  min-width: 100%;
  max-width: 100%;
  min-height: 100%;
  max-height: 100%;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.popover.related-puzzle-popover {
  max-width: none;
  display: flex;
  flex-direction: column;

  .popover-body {
    overflow: auto;
  }
}

.SplitPane > .Pane.collapsing:before {
  content: "";
  display: block;
  height: 100%;
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(255, 0, 0, .2);
  z-index: 2;
}

/* Throw an overlay over iFrames during drag to capture mouse events */
/* Works in Chrome and Safari but not Firefox for some reason*/
.SplitPane.dragging:after {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 2002;
}
/* Kludge that makes it work in Firefox.
   Amazingly, the above part actually works for iFrames outside of the SplitPane,
   so we're covered everywhere. */
.SplitPane.dragging:before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 2003;
}

.SplitPane > .Resizer.horizontal.collapsedAdjacent {
  height: 17px;
  min-height: 17px;
  background-color: #666;
  position: relative;
  &:after {
    content: '';
    display: block;
    width: 0;
    height: 0;
    border-left: 6px solid transparent;
    border-right: 6px solid transparent;
    position: absolute;
    margin-left: -6px;
    left: 50%;
    top: 2px;
    z-index: 2;
  }
  &.collapsedPrevious:after {
    border-top: 4px solid white;
  }
  &.collapsedNext:after {
    border-bottom: 4px solid white;
  }
}

.SplitPane > .Resizer.vertical.collapsedAdjacent {
  width: 17px;
  min-width: 17px;
  background-color: #666;
  position: relative;
  &:after {
    content: '';
    display: block;
    width: 0;
    height: 0;
    border-top: 6px solid transparent;
    border-bottom: 6px solid transparent;
    position: absolute;
    margin-top: -6px;
    top: 50%;
    left: 2px;
    z-index: 2;
  }
  &.collapsedPrevious:after {
    border-left: 4px solid white;
  }
  &.collapsedNext:after {
    border-right: 4px solid white;
  }
}

.SplitPane.disabled > .Resizer {
  display: none;
}

.Resizer {
  background: #000;
  z-index: 1;
  box-sizing: border-box;
  background-clip: padding-box;
  &:hover {
    transition: border 0.8s ease;
  }
}

.Resizer.horizontal {
  height: 11px;
  margin: -5px 0;
  border-top: 5px solid rgba(255, 255, 255, 0);
  border-bottom: 5px solid rgba(255, 255, 255, 0);
  cursor: row-resize;
  width: 100%;
  &:hover {
    border-top: 5px solid rgba(0, 0, 0, 0.1);
    border-bottom: 5px solid rgba(0, 0, 0, 0.1);
  }
}

.Resizer.vertical {
  width: 11px;
  margin: 0 -5px;
  border-left: 5px solid rgba(255, 255, 255, 0);
  border-right: 5px solid rgba(255, 255, 255, 0);
  cursor: col-resize;
  &:hover {
    border-left: 5px solid rgba(0, 0, 0, 0.1);
    border-right: 5px solid rgba(0, 0, 0, 0.1);
  }
}

/* Needed to keep the cursor during the drag
   Not really sure why the Resizer style doesn't work during the drag */
.SplitPane.dragging {
  cursor: move;
  &.horizontal {
    cursor: row-resize;
  }
  &.vertical {
    cursor: col-resize;
  }
}

Resizer.disabled {
  cursor: not-allowed;
  &:hover {
    border-color: transparent;
  }
}
